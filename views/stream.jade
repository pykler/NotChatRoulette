extends layout

block extra_head
  script(src="/socket.io/socket.io.js")

block content
  h1 Webcam stream using NodeJS, Web Sockets and HTML5/Canvas
  video(autoplay=true,id="sourcevid")
  canvas(id="output")
  div(id="log")
  div(id="users")
  script
      var log = function(msg) {
         document.getElementById('log').innerHTML = document.getElementById('log').innerHTML + msg + "<br/>";
      };
      var create_userid = function() {
        return 'xxxxxxx'.replace(/[xy]/g, function(c) {
          var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);
          return v.toString(16);
        });
      }
      userid = create_userid();
      var video = document.getElementsByTagName('video')[0],
          heading = document.getElementsByTagName('h1')[0];
      window.URL = window.URL || window.webkitURL;
      navigator.getUserMedia  = navigator.getUserMedia || navigator.webkitGetUserMedia ||
                                navigator.mozGetUserMedia || navigator.msGetUserMedia;

      if(navigator.getUserMedia) {
          navigator.getUserMedia({video: true}, successCallback, errorCallback);
  
          function successCallback( stream ) {
              // video.src = stream;
              video.src = window.URL.createObjectURL(stream);
          };
  
          function errorCallback( error ) {
              if (error.code == 1) {
              heading.textContent = "You do not have a web cam (or media source)";
              } else {
              heading.textContent = "An error occurred: [CODE " + error.code + "]";
              }
          };
      } else {
          heading.textContent = "Native web camera streaming is not supported in this browser!";
      };
  
      var back = document.createElement('canvas');
      var backcontext = back.getContext('2d');
  
      var socket = io.connect('http://' + window.location.host + '/');

      /* Setup my video */
      // var users = {};
      socket.emit('user', {'userid': userid});
      socket.on('user', function(data) {
        // new user signed in
        var other_user = data.userid;
        // users[data.userid] = null;
        function create_display_fn(uid) {
          var img = document.createElement('img');
          document.getElementById("users").appendChild(img);
          return function(data) {
            console.log(uid);
            img.src = data.data;
          }
        }
        console.log('Setting up user: ' + data.userid);
        socket.on(other_user, create_display_fn(other_user));
      });
  
      cw = 200; // 100; //240;//video.clientWidth;
      ch = 150; // 75; //400;//video.clientHeight;
      back.width = cw;
      back.height = ch;
      draw(video, backcontext, cw, ch);
  
      function draw(v, bc, w, h) {
  
          // First, draw it into the backing canvas
          bc.drawImage(v, 0, 0, w, h);
  
          // Grab the pixel data from the backing canvas
          var stringData=back.toDataURL();
  
          // send it on the wire
          socket.emit('video', {'data': stringData});
  
          // Start over! 10 frames a second = 100milliseconds
          setTimeout(function(){ draw(v, bc, w, h); }, 500);
      }
